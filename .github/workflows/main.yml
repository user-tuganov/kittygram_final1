name: Kittygram CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BACKEND_IMAGE: zumassh/kittygram_backend
  FRONTEND_IMAGE: zumassh/kittygram_frontend
  GATEWAY_IMAGE: zumassh/kittygram_gateway

jobs:
  check-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.10
      - run: pip install ruff
      - run: ruff .

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.10
      - run: pip install -r requirements.txt
      - run: python manage.py test

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - run: npm install
      - run: npm test

  build-and-push:
    runs-on: ubuntu-latest
    needs: [check-backend, test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend
        run: |
          docker build -t $BACKEND_IMAGE ./backend
          docker push $BACKEND_IMAGE

      - name: Build and push frontend
        run: |
          docker build -t $FRONTEND_IMAGE ./frontend
          docker push $FRONTEND_IMAGE

      - name: Build and push gateway
        run: |
          docker build -t $GATEWAY_IMAGE ./nginx
          docker push $GATEWAY_IMAGE

  notify:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Send Telegram notification
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            CI/CD успешно завершён!
            Репозиторий: ${{ github.repository }}
